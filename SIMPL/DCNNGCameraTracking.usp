#CATEGORY "28"
/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:TatAISEnergo
System Name:
System Number:
Programmer:Ziatdinov Danis
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "DCN-NG Camera Control Module"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#Define_Constant BufferSize 64
#Define_Constant PulseTime 50
/*
#HELP_BEGIN
   DCN NG Com Port Camera Tracking Module 
need DCN-SWSACC-E Licence.

Select Autodome mode on DCN-NG
Speed 9.6K

-==Cable PinOuts==-
CCU           AutoDome(Controller side)

Pin 2 (RxD)      Pin 3 (RxD)
Pin 5 (SG)       Pin 1 (Ground)
Pin 7 (RTS) -
			|	 Connect to same side on CCU Unit
Pin 8 (CTS) -
 
MaxPresetConfigured - max presets added in DCN NG unit. 
Camera Address - listened camera adress from DCN, set in DCN-NG unit. 
 
PresetCall - Pulse selected preset from CCU unit

Module can work on TCP Carrier with moxa n-port device by internal TCP-Client service.

Only one mode can selected by pull input to High signal on "SelectRS232Mode" or "SelectInternalTCPMode".

Modulre generate Pulse signal on output.
Checksum not controlled.
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
#user_simplsharp_library "BoschPTZPresets"
/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT
	Initialize,
	SelectRS232Mode,
	SelectInternalTCPMode,
	IPConnect,
	EnableDebug; 
ANALOG_INPUT
	IPPort,
	_skip_,
	CameraID,
	_skip_,
	MaxPresetConfigured; 
STRING_INPUT 
	IPAddress[16],
	_skip_,
	FromDevice[16];
// BUFFER_INPUT 

DIGITAL_OUTPUT
	IPModeInitialized,
	IPChannelConnected,
	PresetCall[100]; 
ANALOG_OUTPUT 
	PresetCalled;
STRING_OUTPUT
	IPConnectionStatus;
 
/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
BoschAutoDomePTZClass DCNTracking;
string FromComPort[10];
/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
callback function SimplPresedCalled(integer Preset)
{
	PresetCalled = Preset;
	if(Preset<=MaxPresetConfigured)
	{
		Pulse(PulseTime, PresetCall[Preset]);
	}
}
callback function IPInitializedCallbackFunction(integer status)
{
    IPModeInitialized = status;//IP Chanel Initialized Moxa or Ethernet to RS-232 dev	    
}

callback function IPConnectionStatusCallbackFunction(string serialStatus, integer analogStatus)
{
	if(analogStatus = 2)
	{
		IPChannelConnected = 1;
	}
	else
	{
     	IPChannelConnected = 0;
	}
	IPConnectionStatus = serialStatus;		
}
 
/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

PUSH initialize
{
	if (SelectRS232Mode = 1 && SelectInternalTCPMode = 0)
	{
    	DCNTracking.Initialize(CameraID);
	}
	if (SelectRS232Mode = 0 && SelectInternalTCPMode = 1)
	{
     	DCNTracking.IPChanelInitialize(IPAddress,IPPort,BufferSize,CameraID);
	}
}
PUSH EnableDebug
{
 	DCNTracking.EnableDebug();
}
 
RELEASE EnableDebug
{
	DCNTracking.DisableDebug(); 	
}

PUSH IPConnect 
{
	DCNTracking.Connect();
}

RELEASE IPConnect 
{
	DCNTracking.Disconnect();
}

CHANGE FromDevice
{
	if(SelectRS232Mode = 1)
	{
		Print("Get RS-232 data: %s",FromDevice );
		//FromComPort = GATHERBYLENGTH(7, FromDevice);
    	//Print("In simpl FromComPort %s",FromComPort);
		DCNTracking.MessageFromDev(FromDevice);
	}

}
/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
	WaitForInitializationComplete();
	IPChannelConnected = 0;
	registerDelegate(DCNTracking, PresedCalled, SimplPresedCalled);
	registerDelegate(DCNTracking, ConnectionStatus, IPConnectionStatusCallbackFunction);
    registerDelegate(DCNTracking, InitializedStatus, IPInitializedCallbackFunction);

}


